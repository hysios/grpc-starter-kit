// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package server

import (
	"github.com/hysios/grpc-starter-kit/service"
	"github.com/hysios/mx/platform/config"
	"github.com/hysios/mx/platform/logger"
	"github.com/hysios/mx/platform/model"
	"github.com/hysios/mx/platform/policy"
	"google.golang.org/grpc"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func SetupServer(addr string) (*grpc.Server, error) {
	configConfig, err := config.LoadDefault()
	if err != nil {
		return nil, err
	}
	loggerLogger := logger.ProviderLog()
	db, err := config.ProviderDatabase(configConfig, loggerLogger)
	if err != nil {
		return nil, err
	}
	enforcer, err := policy.EnforecerProvider(db, configConfig)
	if err != nil {
		return nil, err
	}
	server := service.BuildGPCServer(db, loggerLogger, enforcer)
	return server, nil
}

// wire.go:

func SetupDB() {
	config.SetupDB(func(db *gorm.DB, logger2 *logger.Logger) error {
		log := logger2.Sugar()
		log.Infof("auto migrates database")

		if err := db.AutoMigrate(); err != nil {
			log.Errorf("failed to migrate: %v", err)
			return err
		}
		model.AutoIncrementStart(db, &model.User{}, "id", 100000)

		_, err := model.CreateAdmin(db, "admin", "admin")
		return err
	})
}
